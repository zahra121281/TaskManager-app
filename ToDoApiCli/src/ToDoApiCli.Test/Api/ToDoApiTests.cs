/*
 * webAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ToDoApiCli.Client;
using ToDoApiCli.Api;
// uncomment below to import models
//using ToDoApiCli.Model;

namespace ToDoApiCli.Test.Api
{
    /// <summary>
    ///  Class for testing ToDoApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ToDoApiTests : IDisposable
    {
        private ToDoApi instance;

        public ToDoApiTests()
        {
            instance = new ToDoApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ToDoApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ToDoApi
            //Assert.IsType<ToDoApi>(instance);
        }

        /// <summary>
        /// Test ToDoCheckIdGet
        /// </summary>
        [Fact]
        public void ToDoCheckIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ToDoCheckIdGet(id);
            //Assert.IsType<bool>(response);
        }

        /// <summary>
        /// Test ToDoGet
        /// </summary>
        [Fact]
        public void ToDoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ToDoGet();
            //Assert.IsType<List<Myitem>>(response);
        }

        /// <summary>
        /// Test ToDoItemidDelete
        /// </summary>
        [Fact]
        public void ToDoItemidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string itemid = null;
            //instance.ToDoItemidDelete(itemid);
        }

        /// <summary>
        /// Test ToDoMakeDonePost
        /// </summary>
        [Fact]
        public void ToDoMakeDonePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Myitem myitem = null;
            //instance.ToDoMakeDonePost(myitem);
        }

        /// <summary>
        /// Test ToDoPost
        /// </summary>
        [Fact]
        public void ToDoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Myitem myitem = null;
            //instance.ToDoPost(myitem);
        }

        /// <summary>
        /// Test ToDoTidGet
        /// </summary>
        [Fact]
        public void ToDoTidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tid = null;
            //var response = instance.ToDoTidGet(tid);
            //Assert.IsType<Myitem>(response);
        }

        /// <summary>
        /// Test ToDoTodayItemsGet
        /// </summary>
        [Fact]
        public void ToDoTodayItemsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ToDoTodayItemsGet();
            //Assert.IsType<List<Myitem>>(response);
        }

        /// <summary>
        /// Test ToDoUpdatePost
        /// </summary>
        [Fact]
        public void ToDoUpdatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Myitem myitem = null;
            //instance.ToDoUpdatePost(myitem);
        }
    }
}
